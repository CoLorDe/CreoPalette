{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\loren\\\\creopalette\\\\src\\\\components\\\\Canvas.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from 'react';\n\nfunction Canvas(props) {\n  _s();\n\n  const {\n    draw,\n    ...rest\n  } = props;\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    let frameCount = 0;\n    let animationFrameId;\n\n    const render = () => {\n      if (frameCount === 20) {\n        frameCount = 0;\n      }\n\n      frameCount++;\n      draw(context, frameCount);\n      animationFrameId = window.requestAnimationFrame(render);\n    };\n\n    render();\n    return () => {\n      window.cancelAnimationFrame(animationFrameId);\n    };\n  }, [draw]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    ...rest\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Canvas, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n\n_c = Canvas;\nexport default Canvas;\n\nvar _c;\n\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"sources":["C:/Users/loren/creopalette/src/components/Canvas.js"],"names":["React","useRef","useEffect","Canvas","props","draw","rest","canvasRef","canvas","current","context","getContext","frameCount","animationFrameId","render","window","requestAnimationFrame","cancelAnimationFrame"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AACrB,QAAM;AAAEC,IAAAA,IAAF;AAAQ,OAAGC;AAAX,MAAmBF,KAAzB;AACA,QAAMG,SAAS,GAAGN,MAAM,CAAC,IAAD,CAAxB;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,MAAM,GAAGD,SAAS,CAACE,OAAzB;AACA,UAAMC,OAAO,GAAGF,MAAM,CAACG,UAAP,CAAkB,IAAlB,CAAhB;AACA,QAAIC,UAAU,GAAG,CAAjB;AACA,QAAIC,gBAAJ;;AAEA,UAAMC,MAAM,GAAG,MAAM;AACnB,UAAGF,UAAU,KAAK,EAAlB,EAAsB;AACpBA,QAAAA,UAAU,GAAG,CAAb;AACD;;AACDA,MAAAA,UAAU;AACVP,MAAAA,IAAI,CAACK,OAAD,EAAUE,UAAV,CAAJ;AACAC,MAAAA,gBAAgB,GAAGE,MAAM,CAACC,qBAAP,CAA6BF,MAA7B,CAAnB;AACD,KAPD;;AAQAA,IAAAA,MAAM;AAEN,WAAO,MAAM;AACXC,MAAAA,MAAM,CAACE,oBAAP,CAA4BJ,gBAA5B;AACD,KAFD;AAID,GApBQ,EAoBN,CAACR,IAAD,CApBM,CAAT;AAuBA,sBAAO;AAAQ,IAAA,GAAG,EAAEE,SAAb;AAAA,OAA4BD;AAA5B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GA7BQH,M;;KAAAA,M;AA+BT,eAAeA,MAAf","sourcesContent":["import React, { useRef, useEffect } from 'react'\r\n\r\nfunction Canvas(props) {\r\n  const { draw, ...rest} = props\r\n  const canvasRef = useRef(null)\r\n\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current\r\n    const context = canvas.getContext('2d')\r\n    let frameCount = 0\r\n    let animationFrameId\r\n\r\n    const render = () => {\r\n      if(frameCount === 20) {\r\n        frameCount = 0;\r\n      }\r\n      frameCount++\r\n      draw(context, frameCount)\r\n      animationFrameId = window.requestAnimationFrame(render)\r\n    }\r\n    render()\r\n\r\n    return () => {\r\n      window.cancelAnimationFrame(animationFrameId)\r\n    }\r\n\r\n  }, [draw])\r\n\r\n\r\n  return <canvas ref={canvasRef} {...rest} />\r\n}\r\n\r\nexport default Canvas;\r\n"]},"metadata":{},"sourceType":"module"}